
"""Internal - Media characters separated"""
type MediaCharacter {
  """The characters in the media voiced by the parent actor"""
  character: Character

  """Media specific character name"""
  characterName: String
  dubGroup: String

  """The id of the connection"""
  id: Int

  """The characters role in the media"""
  role: CharacterRole
  roleNotes: String

  """The voice actor of the character"""
  voiceActor: Staff
}

type MediaConnection {
  edges: [MediaEdge]
  nodes: [Media]

  """The pagination information"""
  pageInfo: PageInfo
}

type MediaCoverImage {
  """Average #hex color of cover image"""
  color: String

  """
  The cover image url of the media at its largest size. If this size isn't available, large will be provided instead.
  """
  extraLarge: String

  """The cover image url of the media at a large size"""
  large: String

  """The cover image url of the media at medium size"""
  medium: String
}

"""
Notification for when a media entry's data was changed in a significant way impacting users' list tracking
"""
type MediaDataChangeNotification {
  """The reason for the media data change"""
  context: String

  """The time the notification was created at"""
  createdAt: Int

  """The id of the Notification"""
  id: Int!

  """The media that received data changes"""
  media: Media

  """The id of the media that received data changes"""
  mediaId: Int!

  """The reason for the media data change"""
  reason: String

  """The type of notification"""
  type: NotificationType
}

"""
Notification for when a media tracked in a user's list is deleted from the site
"""
type MediaDeletionNotification {
  """The reason for the media deletion"""
  context: String

  """The time the notification was created at"""
  createdAt: Int

  """The title of the deleted media"""
  deletedMediaTitle: String

  """The id of the Notification"""
  id: Int!

  """The reason for the media deletion"""
  reason: String

  """The type of notification"""
  type: NotificationType
}

"""Media connection edge"""
type MediaEdge {
  """Media specific character name"""
  characterName: String

  """The characters role in the media"""
  characterRole: CharacterRole

  """The characters in the media voiced by the parent actor"""
  characters: [Character]

  """
  Used for grouping roles where multiple dubs exist for the same language. Either dubbing company name or language variant.
  """
  dubGroup: String

  """The order the media should be displayed from the users favourites"""
  favouriteOrder: Int

  """The id of the connection"""
  id: Int

  """
  If the studio is the main animation studio of the media (For Studio->MediaConnection field only)
  """
  isMainStudio: Boolean!
  node: Media

  """The type of relation to the parent model"""
  relationType(
    """Provide 2 to use new version 2 of relation enum"""
    version: Int
  ): MediaRelation

  """Notes regarding the VA's role for the character"""
  roleNotes: String

  """The role of the staff member in the production of the media"""
  staffRole: String

  """The voice actors of the character with role date"""
  voiceActorRoles(language: StaffLanguage, sort: [StaffSort]): [StaffRoleType]

  """The voice actors of the character"""
  voiceActors(language: StaffLanguage, sort: [StaffSort]): [Staff]
}

"""An external link to another site related to the media or staff member"""
type MediaExternalLink {
  color: String

  """
  The icon image url of the site. Not available for all links. Transparent PNG 64x64
  """
  icon: String

  """The id of the external link"""
  id: Int!
  isDisabled: Boolean

  """Language the site content is in. See Staff language field for values."""
  language: String
  notes: String

  """The links website site name"""
  site: String!

  """The links website site id"""
  siteId: Int
  type: ExternalLinkType

  """The url of the external link or base url of link source"""
  url: String
}

"""An external link to another site related to the media"""
input MediaExternalLinkInput {
  """The id of the external link"""
  id: Int!

  """The site location of the external link"""
  site: String!

  """The url of the external link"""
  url: String!
}

"""The format the media was released in"""
enum MediaFormat {
  """Anime broadcast on television"""
  TV

  """Anime which are under 15 minutes in length and broadcast on television"""
  TV_SHORT

  """Anime movies with a theatrical release"""
  MOVIE

  """
  Special episodes that have been included in DVD/Blu-ray releases, picture dramas, pilots, etc
  """
  SPECIAL

  """
  (Original Video Animation) Anime that have been released directly on
  DVD/Blu-ray without originally going through a theatrical release or
  television broadcast
  """
  OVA

  """
  (Original Net Animation) Anime that have been originally released online or are only available through streaming services.
  """
  ONA

  """Short anime released as a music video"""
  MUSIC

  """Professionally published manga with more than one chapter"""
  MANGA

  """Written books released as a series of light novels"""
  NOVEL

  """Manga with just one chapter"""
  ONE_SHOT
}

"""List of anime or manga"""
type MediaList {
  """Map of advanced scores with name keys"""
  advancedScores: Json

  """When the entry was completed by the user"""
  completedAt: FuzzyDate

  """When the entry data was created"""
  createdAt: Int

  """Map of booleans for which custom lists the entry are in"""
  customLists(
    """Change return structure to an array of objects"""
    asArray: Boolean
  ): Json

  """If the entry shown be hidden from non-custom lists"""
  hiddenFromStatusLists: Boolean

  """The id of the list entry"""
  id: Int!
  media: Media

  """The id of the media"""
  mediaId: Int!

  """Text notes"""
  notes: String

  """Priority of planning"""
  priority: Int

  """If the entry should only be visible to authenticated user"""
  private: Boolean

  """The amount of episodes/chapters consumed by the user"""
  progress: Int

  """The amount of volumes read by the user"""
  progressVolumes: Int

  """The amount of times the user has rewatched/read the media"""
  repeat: Int

  """The score of the entry"""
  score(
    """Force the score to be returned in the provided format type."""
    format: ScoreFormat
  ): Float

  """When the entry was started by the user"""
  startedAt: FuzzyDate

  """The watching/reading status"""
  status: MediaListStatus

  """When the entry data was last updated"""
  updatedAt: Int
  user: User

  """The id of the user owner of the list entry"""
  userId: Int!
}

"""List of anime or manga"""
type MediaListCollection {
  """A map of media list entry arrays grouped by custom lists"""
  customLists(asArray: Boolean): [[MediaList]] @deprecated(reason: "Not GraphQL spec compliant, use lists field instead.")

  """If there is another chunk"""
  hasNextChunk: Boolean

  """Grouped media list entries"""
  lists: [MediaListGroup]

  """A map of media list entry arrays grouped by status"""
  statusLists(asArray: Boolean): [[MediaList]] @deprecated(reason: "Not GraphQL spec compliant, use lists field instead.")

  """The owner of the list"""
  user: User
}

"""List group of anime or manga entries"""
type MediaListGroup {
  """Media list entries"""
  entries: [MediaList]
  isCustomList: Boolean
  isSplitCompletedList: Boolean
  name: String
  status: MediaListStatus
}

"""A user's list options"""
type MediaListOptions {
  """The user's anime list options"""
  animeList: MediaListTypeOptions

  """The user's manga list options"""
  mangaList: MediaListTypeOptions

  """The default order list rows should be displayed in"""
  rowOrder: String

  """The score format the user is using for media lists"""
  scoreFormat: ScoreFormat

  """The list theme options for both lists"""
  sharedTheme: Json @deprecated(reason: "No longer used")

  """
  If the shared theme should be used instead of the individual list themes
  """
  sharedThemeEnabled: Boolean @deprecated(reason: "No longer used")
  useLegacyLists: Boolean @deprecated(reason: "No longer used")
}

"""A user's list options for anime or manga lists"""
input MediaListOptionsInput {
  """The names of the user's advanced scoring sections"""
  advancedScoring: [String]

  """If advanced scoring is enabled"""
  advancedScoringEnabled: Boolean

  """The names of the user's custom lists"""
  customLists: [String]

  """The order each list should be displayed in"""
  sectionOrder: [String]

  """If the completed sections of the list should be separated by format"""
  splitCompletedSectionByFormat: Boolean

  """list theme"""
  theme: String
}

"""Media list sort enums"""
enum MediaListSort {
  MEDIA_ID
  MEDIA_ID_DESC
  SCORE
  SCORE_DESC
  STATUS
  STATUS_DESC
  PROGRESS
  PROGRESS_DESC
  PROGRESS_VOLUMES
  PROGRESS_VOLUMES_DESC
  REPEAT
  REPEAT_DESC
  PRIORITY
  PRIORITY_DESC
  STARTED_ON
  STARTED_ON_DESC
  FINISHED_ON
  FINISHED_ON_DESC
  ADDED_TIME
  ADDED_TIME_DESC
  UPDATED_TIME
  UPDATED_TIME_DESC
  MEDIA_TITLE_ROMAJI
  MEDIA_TITLE_ROMAJI_DESC
  MEDIA_TITLE_ENGLISH
  MEDIA_TITLE_ENGLISH_DESC
  MEDIA_TITLE_NATIVE
  MEDIA_TITLE_NATIVE_DESC
  MEDIA_POPULARITY
  MEDIA_POPULARITY_DESC
}

"""Media list watching/reading status enum."""
enum MediaListStatus {
  """Currently watching/reading"""
  CURRENT

  """Planning to watch/read"""
  PLANNING

  """Finished watching/reading"""
  COMPLETED

  """Stopped watching/reading before completing"""
  DROPPED

  """Paused watching/reading"""
  PAUSED

  """Re-watching/reading"""
  REPEATING
}

"""A user's list options for anime or manga lists"""
type MediaListTypeOptions {
  """The names of the user's advanced scoring sections"""
  advancedScoring: [String]

  """If advanced scoring is enabled"""
  advancedScoringEnabled: Boolean

  """The names of the user's custom lists"""
  customLists: [String]

  """The order each list should be displayed in"""
  sectionOrder: [String]

  """If the completed sections of the list should be separated by format"""
  splitCompletedSectionByFormat: Boolean

  """The list theme options"""
  theme: Json @deprecated(reason: "This field has not yet been fully implemented and may change without warning")
}

"""
Notification for when a media entry is merged into another for a user who had it on their list
"""
type MediaMergeNotification {
  """The reason for the media data change"""
  context: String

  """The time the notification was created at"""
  createdAt: Int

  """The title of the deleted media"""
  deletedMediaTitles: [String]

  """The id of the Notification"""
  id: Int!

  """The media that was merged into"""
  media: Media

  """The id of the media that was merged into"""
  mediaId: Int!

  """The reason for the media merge"""
  reason: String

  """The type of notification"""
  type: NotificationType
}

"""
The ranking of a media in a particular time span and format compared to other media
"""
type MediaRank {
  """If the ranking is based on all time instead of a season/year"""
  allTime: Boolean

  """String that gives context to the ranking type and time span"""
  context: String!

  """The format the media is ranked within"""
  format: MediaFormat!

  """The id of the rank"""
  id: Int!

  """The numerical rank of the media"""
  rank: Int!

  """The season the media is ranked within"""
  season: MediaSeason

  """The type of ranking"""
  type: MediaRankType!

  """The year the media is ranked within"""
  year: Int
}

"""The type of ranking"""
enum MediaRankType {
  """Ranking is based on the media's ratings/score"""
  RATED

  """Ranking is based on the media's popularity"""
  POPULAR
}

"""Type of relation media has to its parent."""
enum MediaRelation {
  """An adaption of this media into a different format"""
  ADAPTATION

  """Released before the relation"""
  PREQUEL

  """Released after the relation"""
  SEQUEL

  """The media a side story is from"""
  PARENT

  """A side story of the parent media"""
  SIDE_STORY

  """Shares at least 1 character"""
  CHARACTER

  """A shortened and summarized version"""
  SUMMARY

  """An alternative version of the same media"""
  ALTERNATIVE

  """An alternative version of the media with a different primary focus"""
  SPIN_OFF

  """Other"""
  OTHER

  """Version 2 only. The source material the media was adapted from"""
  SOURCE

  """Version 2 only."""
  COMPILATION

  """Version 2 only."""
  CONTAINS
}

enum MediaSeason {
  """Months December to February"""
  WINTER

  """Months March to May"""
  SPRING

  """Months June to August"""
  SUMMER

  """Months September to November"""
  FALL
}

"""Media sort enums"""
enum MediaSort {
  ID
  ID_DESC
  TITLE_ROMAJI
  TITLE_ROMAJI_DESC
  TITLE_ENGLISH
  TITLE_ENGLISH_DESC
  TITLE_NATIVE
  TITLE_NATIVE_DESC
  TYPE
  TYPE_DESC
  FORMAT
  FORMAT_DESC
  START_DATE
  START_DATE_DESC
  END_DATE
  END_DATE_DESC
  SCORE
  SCORE_DESC
  POPULARITY
  POPULARITY_DESC
  TRENDING
  TRENDING_DESC
  EPISODES
  EPISODES_DESC
  DURATION
  DURATION_DESC
  STATUS
  STATUS_DESC
  CHAPTERS
  CHAPTERS_DESC
  VOLUMES
  VOLUMES_DESC
  UPDATED_AT
  UPDATED_AT_DESC
  SEARCH_MATCH
  FAVOURITES
  FAVOURITES_DESC
}

"""Source type the media was adapted from"""
enum MediaSource {
  """An original production not based of another work"""
  ORIGINAL

  """Asian comic book"""
  MANGA

  """Written work published in volumes"""
  LIGHT_NOVEL

  """Video game driven primary by text and narrative"""
  VISUAL_NOVEL

  """Video game"""
  VIDEO_GAME

  """Other"""
  OTHER

  """Version 2+ only. Written works not published in volumes"""
  NOVEL

  """Version 2+ only. Self-published works"""
  DOUJINSHI

  """Version 2+ only. Japanese Anime"""
  ANIME

  """Version 3 only. Written works published online"""
  WEB_NOVEL

  """Version 3 only. Live action media such as movies or TV show"""
  LIVE_ACTION

  """Version 3 only. Games excluding video games"""
  GAME

  """Version 3 only. Comics excluding manga"""
  COMIC

  """Version 3 only. Multimedia project"""
  MULTIMEDIA_PROJECT

  """Version 3 only. Picture book"""
  PICTURE_BOOK
}

"""A media's statistics"""
type MediaStats {
  airingProgression: [AiringProgression] @deprecated(reason: "Replaced by MediaTrends")
  scoreDistribution: [ScoreDistribution]
  statusDistribution: [StatusDistribution]
}

"""The current releasing status of the media"""
enum MediaStatus {
  """Has completed and is no longer being released"""
  FINISHED

  """Currently releasing"""
  RELEASING

  """To be released at a later date"""
  NOT_YET_RELEASED

  """Ended before the work could be finished"""
  CANCELLED

  """
  Version 2 only. Is currently paused from releasing and will resume at a later date
  """
  HIATUS
}

"""Data and links to legal streaming episodes on external sites"""
type MediaStreamingEpisode {
  """The site location of the streaming episodes"""
  site: String

  """Url of episode image thumbnail"""
  thumbnail: String

  """Title of the episode"""
  title: String

  """The url of the episode"""
  url: String
}

"""Media submission"""
type MediaSubmission {
  """Data Mod assigned to handle the submission"""
  assignee: User
  changes: [String]
  characters: [MediaSubmissionComparison]
  createdAt: Int
  externalLinks: [MediaSubmissionComparison]

  """The id of the submission"""
  id: Int!

  """Whether the submission is locked"""
  locked: Boolean
  media: Media
  notes: String
  relations: [MediaEdge]
  source: String
  staff: [MediaSubmissionComparison]

  """Status of the submission"""
  status: SubmissionStatus
  studios: [MediaSubmissionComparison]
  submission: Media

  """User submitter of the submission"""
  submitter: User
  submitterStats: Json
}

"""Media submission with comparison to current data"""
type MediaSubmissionComparison {
  character: MediaCharacter
  externalLink: MediaExternalLink
  staff: StaffEdge
  studio: StudioEdge
  submission: MediaSubmissionEdge
}

type MediaSubmissionEdge {
  character: Character
  characterName: String
  characterRole: CharacterRole
  characterSubmission: Character
  dubGroup: String
  externalLink: MediaExternalLink

  """The id of the direct submission"""
  id: Int
  isMain: Boolean
  media: Media
  roleNotes: String
  staff: Staff
  staffRole: String
  staffSubmission: Staff
  studio: Studio
  voiceActor: Staff
  voiceActorSubmission: Staff
}

"""A tag that describes a theme or element of the media"""
type MediaTag {
  """The categories of tags this tag belongs to"""
  category: String

  """A general description of the tag"""
  description: String

  """The id of the tag"""
  id: Int!

  """If the tag is only for adult 18+ media"""
  isAdult: Boolean

  """If the tag could be a spoiler for any media"""
  isGeneralSpoiler: Boolean

  """If the tag is a spoiler for this media"""
  isMediaSpoiler: Boolean

  """The name of the tag"""
  name: String!

  """The relevance ranking of the tag out of the 100 for this media"""
  rank: Int

  """The user who submitted the tag"""
  userId: Int
}

"""The official titles of the media in various languages"""
type MediaTitle {
  """The official english title"""
  english(stylised: Boolean): String

  """Official title in it's native language"""
  native(stylised: Boolean): String

  """The romanization of the native language title"""
  romaji(stylised: Boolean): String

  """
  The currently authenticated users preferred title language. Default romaji for non-authenticated
  """
  userPreferred: String
}

"""The official titles of the media in various languages"""
input MediaTitleInput {
  """The official english title"""
  english: String

  """Official title in it's native language"""
  native: String

  """The romanization of the native language title"""
  romaji: String
}

"""Media trailer or advertisement"""
type MediaTrailer {
  """The trailer video id"""
  id: String

  """
  The site the video is hosted by (Currently either youtube or dailymotion)
  """
  site: String

  """The url for the thumbnail image of the video"""
  thumbnail: String
}

"""Daily media statistics"""
type MediaTrend {
  """A weighted average score of all the user's scores of the media"""
  averageScore: Int

  """The day the data was recorded (timestamp)"""
  date: Int!

  """The episode number of the anime released on this day"""
  episode: Int

  """The number of users with watching/reading the media"""
  inProgress: Int

  """The related media"""
  media: Media

  """The id of the tag"""
  mediaId: Int!

  """The number of users with the media on their list"""
  popularity: Int

  """If the media was being released at this time"""
  releasing: Boolean!

  """The amount of media activity on the day"""
  trending: Int!
}

type MediaTrendConnection {
  edges: [MediaTrendEdge]
  nodes: [MediaTrend]

  """The pagination information"""
  pageInfo: PageInfo
}

"""Media trend connection edge"""
type MediaTrendEdge {
  node: MediaTrend
}

"""Media trend sort enums"""
enum MediaTrendSort {
  ID
  ID_DESC
  MEDIA_ID
  MEDIA_ID_DESC
  DATE
  DATE_DESC
  SCORE
  SCORE_DESC
  POPULARITY
  POPULARITY_DESC
  TRENDING
  TRENDING_DESC
  EPISODE
  EPISODE_DESC
}

"""Media type enum, anime or manga."""
enum MediaType {
  """Japanese Anime"""
  ANIME

  """Asian comic"""
  MANGA
}
